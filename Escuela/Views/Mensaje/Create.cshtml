@model Escuela.Models.Mensaje

@{
    ViewBag.Title = "Create";
    if (ViewBag.Alumno!= null && ViewBag.Alumno)
    {
        Layout = "~/Views/Shared/_AluLayout.cshtml";
    }
    else
    {
        if (ViewBag.Profesor != null && ViewBag.Profesor)
        {
            Layout = "~/Views/Shared/_ProfeLayout.cshtml";
        }
        else
        {
            Layout = "~/Views/Shared/_Layout.cshtml";
        }
    }
}

<div class="jumbotron" style="margin: 35px 10%">



    <h2>Redactar nuevo mensaje</h2>


    @using (Html.BeginForm(Html.BeginForm("Create", "Mensaje", FormMethod.Post)))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Fecha)
        @Html.HiddenFor(model => model.Emisor)


        <div class="form-horizontal">
            <h4>Mensaje</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @{ 
                if ( ViewData["Error"]!= null && ViewData["Error"].ToString().Equals("true"))
                {
                    <p class="text-danger">-Error, el usuario al que quieres enviar un mensaje no existe</p>
                    ViewData["Error"] = null;
                }
            }
            
            <div class="form-group">
                @Html.LabelFor(model => model.Receptor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Receptor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Receptor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Texto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Texto, 15, 150, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Texto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Enviar" class="btn btn-default" />
                </div>
            </div>

            <div>
                @Html.ActionLink("Volver a Mensajes", "Index", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    }


</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

